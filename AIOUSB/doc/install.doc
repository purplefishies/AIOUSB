/******************************************************************************
 *
 * 
 *
 * 
 */
/*! \page install Installation

\addindex installation
\tableofcontents

\section install_src_unix Compiling from source on Linux/MacOSX 

Assuming youâ€™re starting from the root directory of the distribution,
installing AIOUSB consists of performing these few simple steps
(logged in as 'root', of course). 

~~~{.sh}
mkdir /usr/local/include/aiousb
cp -p lib/aiousb.h /usr/local/include/aiousb
cp -p lib/libaiousb*.a /usr/local/lib
export CPATH=/usr/local/include/libusb-1.0/:/usr/local/include/aiousb
~~~

You can, of course, place the AIOUSB files (aiousb.h, libaiousb*.a)
elsewhere, such as in the local directory of the application program
that will use AIOUSB. The above steps are suggested in order to
conform to the usual Linux conventions and make the AIOUSB files
available to all users and all application programs.

If you do locate the libraries and header files somewhere else, there
is an environment variable you can set which is used by the sample
program make files:

~~~{.sh}
export AIOUSBLIBDIR="/path/to/the/AIOUSB_libraries/"
~~~

There are several variations of the AIOUSB C library. They all begin with "libaiousb" and have an extension of ".a". There are currently no shared versions of the AIOUSB C library. The library files which contain the string "cpp" contain object modules that are compiled for use with C++ (using "g++"). They are not C++ class libraries (see below for information about the genuine C++ class library). The library files which contain the string "dbg" are compiled for source level debugging with the "-ggdb" compiler option. At present, there are four variations of the AIOUSB C library: C or C++, and release or debug.


To take full advantage of AIOUSB's features the following additional
tools should be installed.

<ul>

<li>GNU make 
<li>Libusb
<li>
<li>A \LaTeX distribution: for instance
    <a href="http://www.tug.org/interest.html#free">TeX Live</a>
    This is needed for generating \LaTeX, Postscript, and PDF output.
<li><a href="http://www.graphviz.org/">
    the Graph visualization toolkit version 1.8.10 or higher</a>
    Needed for the include dependency graphs, 
    the graphical inheritance graphs, and the collaboration graphs.
    If you compile graphviz yourself, make sure you do include
    freetype support (which requires the freetype library and header files), 
    otherwise the graphs will not render proper text labels.
<li>For formulas in the HTML output (when MathJax is not used)
    or in case you do not wish to use `pdflatex,
    the ghostscript interpreter is needed. You can find it at 
    <a href="http://www.ghostscript.com/">www.ghostscript.com</a>.
</ul>

Compilation is now done by performing the following steps:

<ol>
<li>Unpack the archive, unless you already have done that:

        gunzip AIOUSB-$VERSION.src.tar.gz    # uncompress the archive
        tar xf AIOUSB-$VERSION.src.tar       # unpack it

<li>Create a build directory (for instance inside the source tree)
~~~{.sh}
cd AIOUSB-$VERSION
mkdir build
~~~
<li>Run cmake with the makefile generator
~~~{.sh}
cmake -G "Unix Makefiles" ..
~~~
    <code>cmake</code> tries to determine the platform you use, and will look
    for the requires tools. It will report if something is missing.

    If you have Qt-4.3 or higher installed and want to build the GUI
    front-end, you should enable it as follows:
~~~{.sh}
cmake -Dbuild_wizard=YES
~~~

__For an overview of other configuration options use__

~~~{.sh}
cmake -L
~~~

<li>Compile the program by running make:

        make

    The program should compile without problems and the binaries
    (<code>AIOUSB</code> and optionally <code>doxywizard</code>)
    should be available in the bin directory within the build directory.

<li>Optional: Generate the user manual.
    
        cmake -Dbuild_doc=YES
        make docs

    To let AIOUSB generate the HTML and PDF documentation.
    
    The HTML directory within the build directory will now contain the html
    documentation (just point a HTML browser to the file
    <code>index.html</code> in the html directory).
    
</ol>

\section install_bin_unix Installing the binaries on UNIX

After the compilation of the source code do a <code>make install</code>
to install AIOUSB. If you downloaded the binary distribution for UNIX,
type:

    ./configure
    make install

Binaries are installed into the directory <code>\<prefix\>/bin</code>.
Use <code>make install_docs</code> to install the
documentation and examples into <code>\<docdir\>/AIOUSB</code>. 

<code>\<prefix\></code> defaults to <code>/usr/local</code> but can be changed with 
the `--prefix` option of the configure script. 
The default <code>\<docdir\></code> directory is 
<code>\<prefix\>/share/doc/packages</code> and can be changed with
the `--docdir` option of the configure script.

Alternatively, you can also copy the binaries from the <code>bin</code> 
directory manually to some <code>bin</code> directory in your search path.
This is sufficient to use AIOUSB.

\note You need the GNU install tool for this to work (it is part of
the coreutils package). Other install tools may put the binaries in 
the wrong directory!

If you have a RPM or DEP package, then please follow the 
standard installation procedure that is required for these packages. 

\section install_src_windows Compiling from source on Windows


See the link at [Foo](@ref Prerequisites)

TBD

\htmlonly
Go to the <a href="starting.html">next</a> section or return to the
 <a href="index.html">index</a>.
\endhtmlonly

*/

