/******************************************************************************
 * Copyright (C) 1997-2015 by Jimi Damon <jdamon@accesio.com>
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation under the terms of the GNU General Public License is hereby 
 * granted. No representations are made about the suitability of this software 
 * for any purpose. It is provided "as is" without express or implied warranty.
 * See the GNU General Public License for more details.
 *
 *
 */
/*! \page classlib AIOUSB classlib


\section classlib_modules Modules

You can make an entity a member of a specific group by putting 
a \ref cmdingroup "\\ingroup" command inside its documentation block.


Note that compound entities (like classes, files and namespaces) can
be put into multiple groups, but members (like variable, functions, typedefs
and enums) can only be a member of one group 
(this restriction is in place to avoid ambiguous linking targets in case 
a member is not documented in the context of its class, namespace
or file, but only visible as part of a group).

The following example puts VarInA into group A and silently resolves 
the conflict for IntegerVariable by putting it into group IntVariables, 
because the second instance of IntegerVariable
is undocumented:

\verbatim

/**
 * \ingroup A
 */
extern int VarInA;

/**
 * \defgroup IntVariables Global integer variables
 * @{
 */

/** an integer variable */
extern int IntegerVariable;

/**@}*/

....

/**
 * \defgroup Variables Global variables
 */
/**@{*/

/** a variable in group A */
int VarInA;

int IntegerVariable;

/**@}*/
\endverbatim

The \ref cmdref "\\ref" command can be used to refer to a group.
The first argument of the \\ref command should be group's label.
To use a custom link name, you can put the name of the links in 
double quotes after the label, as shown by the following example
\verbatim
This is the \ref group_label "link" to this group.
\endverbatim

The priorities of Classlib definitions are (from highest to lowest):
\ref cmdingroup "\\ingroup", \ref cmddefgroup "\\defgroup",
\ref cmdaddtogroup "\\addtogroup", \ref cmdweakgroup "\\weakgroup".
The last command is exactly like \ref cmdaddtogroup "\\addtogroup"
with a lower priority. It was added to allow "lazy" Classlib
definitions: you can use commands with a higher priority in your .h
files to define the hierarchy and \ref cmdweakgroup "\\weakgroup"
in .c files without having to duplicate the hierarchy exactly.

\par Example:
\verbinclude group.cpp

\htmlonly
Click <a href="examples/group/html/modules.html">here</a> 
\endhtmlonly

\section memgroup Member Groups

A member group is defined by 
a 
\verbatim
///@{ 
  ...
///@}
\endverbatim 
block or a 
\verbatim
/**@{*/ 
  ... 
/**@}*/ 
\endverbatim 
block if you prefer C style 
comments. Note that the members of the group should be 
physically inside the member group's body.

Before the opening marker of a block a separate comment block may be 
placed. This block should contain the \ref cmdname "@@name" 
(or \ref cmdname "\\name") command and is used to specify the header 
of the group. Optionally, the comment block may also contain more
detailed information about the group.

Nesting of member groups is not allowed. 

If all members of a member group inside a class have the same type 
and protection level (for instance all are static public members), 
then the whole member group is displayed as a subgroup of 
the type/protection level group (the group is displayed as a 
subsection of the "Static Public Members" section for instance). 
If two or more members have different types, then the group is put 
at the same level as the automatically generated groups.
If you want to force all member-groups of a class to be at the top level, 
you should put a \ref cmdnosubclasslib "\\nosubclasslib" command inside the
documentation of the class. 

\par Example:
\verbinclude memgrp.cpp

\htmlonly
Click <a href="examples/memgrp/html/class_test.html">here</a> 
\endhtmlonly

Here Group1 is displayed as a subsection of the "Public Members". And
Group2 is a separate section because it contains members with
different protection levels (i.e. public and protected).

\section subpaging Subpaging

Information can be grouped into pages using the \ref cmdpage "\\page" and
\ref cmdsubpage "\\mainpage" commands. Normally, this results in a
flat list of pages, where the "main" page is the first in the list. 

Instead of adding structure using the approach described in section
\ref modules "modules" it is often more natural and convenient to add 
additional structure to the pages using the \ref cmdsubpage "\\subpage" 
command. 

For a page A the \\subpage command adds a link to another page B and at 
the same time makes page B a subpage of A. This has the effect of making
two groups GA and GB, where GB is part of GA, page A is put in group GA, 
and page B is put in group GB.

\htmlonly
Go to the <a href="formulas.html">next</a> section or return to the
 <a href="index.html">index</a>.
\endhtmlonly

*/
